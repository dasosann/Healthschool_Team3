import React, { useEffect, useState } from 'react';
import S from './style';
import BasicButton from '../../../../components/button/BasicButton';
import { useLocation, useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';

// Î©îÏù∏ Îß§Îâ¥
const Menus = [
    {
        icon: 'üî•',
        label: 'Ïù∏Í∏∞Ïπ¥ÌÖåÍ≥†Î¶¨',
        // subLabels: ['Í±¥Í∞ï', 'Îß§ÏùºÎß§Ïùº', 'Ïú†ÏÇ∞ÏÜå', 'ÌïÑÎùºÌÖåÏä§', 'ÏöîÍ∞Ä']
        // {name : 'Í±¥Í∞ï', path :'/search/${name}'}
    },
    {
        icon: 'üìÑ',
        label: 'ÎßàÏù¥ÌéòÏù¥ÏßÄ',
        path: '/mypage/my'
    },
    {
        icon: 'üöÄ',
        label: 'ÎùºÏù¥Î∏å',
        // subLabels: ['Í≥µÏßÄÏÇ¨Ìï≠', 'ÌòÑÏû¨ Î∞©ÏÜ°', 'ÏßÄÎÇú Î∞©ÏÜ°', 'QnA']
        // {name : 'Í≥µÏßÄÏÇ¨Ìï≠', path :'/live/note'}
        // {name : 'ÌòÑÏû¨ Î∞©ÏÜ°', path :'/live'}
        // {name : 'ÏßÄÎÇú Î∞©ÏÜ°', path :'/live/vod'}
        // {name : 'QnA', path :'/live/qna'}
        subLabels: [
            { name: 'ÌòÑÏû¨ Î∞©ÏÜ°', path: '/live' },
            { name: 'ÏòÅÏÉÅ', path: '/myVideoManage' },
        ]
    },
    {
        icon: 'üõí',
        label: 'Ïû•Î∞îÍµ¨Îãà',
        // subLabels: ['Ï†úÌíà ÏÑ†ÌÉù', 'ÌöåÏõêÏ†ïÎ≥¥/Ï£ºÏÜå', 'Í≤∞Ï†ú', 'Í≤∞Ï†ú ÎÇ¥Ïó≠/ÏòÅÏàòÏ¶ù']
        // {name : 'Ï†úÌíàÏÑ†ÌÉù', path :'/payment'}
        // {name : 'ÌöåÏõêÏ†ïÎ≥¥/Ï£ºÏÜå', path :'/payment/address'}
        // {name : 'Í≤∞Ï†ú', path :'/payment/transaction'}
        // {name : 'Í≤∞Ï†ú ÎÇ¥Ïó≠/ÏòÅÏàòÏ¶ù', path :'/payment/info'}
        subLabels: [
            { name: 'Ïπ¥Ìä∏', path: '/payment/cart' },
            { name: 'Ï£ºÏÜå', path: '/payment/address' },
        ]
    },
    {
        icon: 'üì¢',
        label: 'Í≥†Í∞ùÏÑºÌÑ∞',
        subLabels: [
            { name: 'Í≥µÏßÄÏÇ¨Ìï≠', path: '/help/notice' },
            { name: 'ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏', path: '/help/popularquestion' },
            { name: '1:1 Î¨∏Ïùò', path: '/help/individualquestion' },
        ]
    },
];

// Ïú†Ï†Ä Îß§Îâ¥
const MyMenus = [
    {
        icon: 'üì¢',
        label: 'ÏÑ§Ï†ï',
        subLabels: [
            { name: 'ÌöåÏõê Ï†ïÎ≥¥', path: '/mypage/profile' },
            { name: 'ÌîÑÎ°úÌïÑ ÏÇ¨ÏßÑ Î≥ÄÍ≤Ω', path: '/mypage/profile-img' },
            { name: 'ÎπÑÎ∞ÄÎ≤àÌò∏ Î≥ÄÍ≤Ω', path: '/mypage/update-password' },
            { name: 'Í∞ïÏÇ¨ Ïù∏Ï¶ù', path: '/mypage/certify' },
        ]
    },
    {
        icon: 'üì¢',
        label: 'Í≥†Í∞ùÏÑºÌÑ∞',
        subLabels: [
            { name: 'Í≥µÏßÄÏÇ¨Ìï≠', path: '/help/notice' },
            { name: 'ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏', path: '/help/popularquestion' },
            { name: '1:1 Î¨∏Ïùò', path: '/help/individualquestion' },
        ]
    },
];


//Í∞ïÏÇ¨ Î©îÎâ¥

const NavBar = () => {
    const location = useLocation();
    const [activeMenu, setActiveMenu] = useState(null);
    const [isMyPage, setIsMyPage] = useState(false);
    const navigate = useNavigate();
    // Î°úÍ∑∏Ïù∏Ï†Ñ, Î°úÍ∑∏Ïù∏ÌõÑ, Î°úÍ∑∏Ïù∏ÌõÑ(Í∞ïÏÇ¨)
    const { isLogin, currentUser } = useSelector(state => state.user);
    const { name, isTeacher, profile } = currentUser
    const dispatch = useDispatch();

    useEffect(() => {
        console.log("üöÄ ~ NavBar ~ location:", location);
        setIsMyPage(['/mypage', '/help', '/live'].some((path) => location.pathname.includes(path)));
    }, [location]);


    const handleMyMenuClick = (path) => {
        console.log("üöÄ ~ handleMenuClick ~ path:", path)
        navigate(path);
    };

    //Î©îÏù∏ Î©îÎâ¥ ÌÅ¥Î¶≠Ìï†Îïå ÏÑúÎ∏å Î©îÎâ¥Í∞Ä ÏóÜÏùÑÎïå 
    const handleMenuClick = (menu) => {
        if (menu.path) {
            navigate(menu.path);
        } else {
            setActiveMenu((prev) => (prev === menu.label ? null : menu.label)); // subLabels ÌÜ†Í∏Ä
        }
    }

    //Î©îÏù∏ Î©îÎâ¥ ÏÑúÎ∏å Î©îÎâ¥ ÌÅ¥Î¶≠
    const handleSubMenu = (path) => {
        navigate(path);
    }

    return (
        <S.Wrapper>
            {isMyPage ? (
                <>
                    <S.ProfileSection>
                        <S.ProfileImage>
                            <S.Profile src={profile == ''? process.env.PUBLIC_URL + `/images/profile/defaultProfile.jpg`: profile } alt={'#'} />
                        </S.ProfileImage>
                        <S.ProfileName>{name} ÌöåÏõêÎãò</S.ProfileName>
                        {isTeacher &&
                            <>
                                <BasicButton size={'medium'} shape={'small'} variant={'primary'} color={'white'} font={'h7'}>Q&A  ÎãµÎ≥Ä</BasicButton>
                            </>
                        }

                    </S.ProfileSection>

                    <S.MenuWrapper>
                        {isMyPage && (
                            <>
                                {MyMenus.map((menu, index) => (
                                    <div key={index}>
                                        <S.MenuItem>
                                            <S.MenuIcon>{menu.icon}</S.MenuIcon>
                                            <S.MenuLabel>{menu.label}</S.MenuLabel>
                                        </S.MenuItem>
                                        {(
                                            <S.SubLabelWrapper>
                                                {menu.subLabels.map((subLabel, subIndex) => (
                                                    <S.SubLabel key={subIndex} onClick={() => handleMyMenuClick(subLabel.path)}>{subLabel.name}</S.SubLabel>
                                                ))}
                                            </S.SubLabelWrapper>
                                        )}
                                    </div>
                                ))}
                            </>
                        )}
                    </S.MenuWrapper>
                </>
            ) : (
                <>
                    {Menus.map((menu, index) => (
                        <S.MenuWrapper key={index}>
                            <S.MenuItem onClick={() => handleMenuClick(menu)}>
                                <S.MenuIcon>{menu.icon}</S.MenuIcon>
                                <S.MenuLabel>{menu.label}</S.MenuLabel>
                            </S.MenuItem>
                            {activeMenu === menu.label && menu.subLabels && (
                                <S.SubLabelWrapper>
                                    {menu.subLabels.map((subLabel, subIndex) => (
                                        <S.SubLabel key={subIndex} onClick={()=>handleSubMenu(subLabel.path)}>{subLabel.name}</S.SubLabel>
                                    ))}
                                </S.SubLabelWrapper>
                            )}
                        </S.MenuWrapper>
                    ))}
                </>
            )}
        </S.Wrapper>
    );
};

export default NavBar;
